//https://leetcode.com/problems/minimum-penalty-for-a-shop/description/
//Time: o(n)
//Space: o(n)
class Solution {
public:
    int bestClosingTime(string a) {
        int n = a.size();
        vector<int> prefix(n + 1, 0), suffix(n + 1, 0);

        for(int i = 1; i <= n; i++) {
            prefix[i] = prefix[i-1] + (a[i-1] == 'N');
        }
        for(int i = n-1; i >= 0; i--) {
            suffix[i] = suffix[i+1] + (a[i] == 'Y');
        }

        int answer = 0, penalty = 1e9;
        for (int i = 0; i <= n; i++) {
            int currPenalty = prefix[i] + suffix[i];
            if (penalty > currPenalty) {
                penalty = currPenalty;
                answer = i;
            }
        }
        return answer;
    }
};